//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace se.smartid {

public class MatchResult : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MatchResult(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MatchResult obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MatchResult() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          csSmartIdEnginePINVOKE.delete_MatchResult(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public MatchResult() : this(csSmartIdEnginePINVOKE.new_MatchResult__SWIG_0(), true) {
  }

  public MatchResult(string tpl_type, Quadrangle quadrangle, bool accepted) : this(csSmartIdEnginePINVOKE.new_MatchResult__SWIG_1(tpl_type, Quadrangle.getCPtr(quadrangle), accepted), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public MatchResult(string tpl_type, Quadrangle quadrangle) : this(csSmartIdEnginePINVOKE.new_MatchResult__SWIG_2(tpl_type, Quadrangle.getCPtr(quadrangle)), true) {
    if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetTemplateType() {
    string ret = csSmartIdEnginePINVOKE.MatchResult_GetTemplateType(swigCPtr);
    return ret;
  }

  public Quadrangle GetQuadrangle() {
    Quadrangle ret = new Quadrangle(csSmartIdEnginePINVOKE.MatchResult_GetQuadrangle(swigCPtr), false);
    return ret;
  }

  public bool GetAccepted() {
    bool ret = csSmartIdEnginePINVOKE.MatchResult_GetAccepted(swigCPtr);
    return ret;
  }

  public string templateType {
    set {
      csSmartIdEnginePINVOKE.MatchResult_templateType_set(swigCPtr, value);
      if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = csSmartIdEnginePINVOKE.MatchResult_templateType_get(swigCPtr);
      if (csSmartIdEnginePINVOKE.SWIGPendingException.Pending) throw csSmartIdEnginePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Quadrangle quadrangle {
    set {
      csSmartIdEnginePINVOKE.MatchResult_quadrangle_set(swigCPtr, Quadrangle.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = csSmartIdEnginePINVOKE.MatchResult_quadrangle_get(swigCPtr);
      Quadrangle ret = (cPtr == global::System.IntPtr.Zero) ? null : new Quadrangle(cPtr, false);
      return ret;
    } 
  }

  public bool accepted {
    set {
      csSmartIdEnginePINVOKE.MatchResult_accepted_set(swigCPtr, value);
    } 
    get {
      bool ret = csSmartIdEnginePINVOKE.MatchResult_accepted_get(swigCPtr);
      return ret;
    } 
  }

}

}
